/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: ilarioseb (https://sketchfab.com/ilarioseb)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/satellite-402afb3459db47658c39875c38a6ff2a
Title: Satellite
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import gsap from "gsap";

export default function Satellite(props) {
  const satelliteGroup = useRef();
  const satelliteMesh = useRef();

  const { nodes, materials } = useGLTF("models/satellite.glb");

  useEffect(() => {
    if (satelliteGroup.current && satelliteMesh.current) {
      // Ensure material transparency
      satelliteMesh.current.material.transparent = true;
      satelliteMesh.current.material.opacity = 0;

      // Animate Z position + fade-in
      gsap.fromTo(
        satelliteGroup.current.position,
        { z: -5 },
        {
          z: -1,
          duration: 1.5,
          ease: "easeInOut",
        }
      );

      gsap.to(satelliteMesh.current.material, {
        opacity: 1,
        // color: "blue",
        duration: 1.5,
        ease: "power2.inOut",
      });
    }
  }, []);

  return (
    <group {...props} dispose={null}>
      <group ref={satelliteGroup} scale={0.01}>
        <mesh
          ref={satelliteMesh}
          castShadow
          receiveShadow
          geometry={nodes.satellite_satellite_0.geometry}
          material={materials.satellite}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
      </group>
    </group>
  );
}

useGLTF.preload("models/satellite.glb");